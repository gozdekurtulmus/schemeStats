#lang racket
 (define my-list
  (file->lines "wine.data.txt"
    ))

(define (create-list-iter lst lst2 row column)
  (cond ((= column (length lst)) lst2)
        (else (create-list-iter lst
                                (append lst2 (list (row-iter lst (list) row column)))
                                row
                                (+ column 1)))))
                                
                                
(define (row-iter lst lst2 row column)
  (if (= row 14) lst2
      (row-iter lst
                (append lst2 (list (string->number
                       (list-ref
                           (string-split
                               (list-ref my-list column) ",") row))))
                (+ row 1) column)))

  
;(define (summary-statistics list)
;  ((mean-iter 0 0 (/ (length list) 14) list)))

;(define (mean-iter mean counter max-count list)
;  (if ( > counter max-count)
;     (/ mean max-count)
;  (mean-iter (+ mean (to-number (list-ref(select-set counter list) 1)))
;                (+ counter 1) (max-count) list)))


;(select-set-iter 0 my-list list2 )
                                  
(define data-list(create-list-iter my-list (list) 0 0))